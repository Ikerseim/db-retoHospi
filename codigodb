USE [temporal]
GO
/****** Object:  Schema [hospi]    Script Date: 15/05/2020 18:31:46 ******/
CREATE SCHEMA [hospi]
GO
/****** Object:  UserDefinedFunction [hospi].[ContarGenero]    Script Date: 15/05/2020 18:31:46 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create FUNCTION [hospi].[ContarGenero]( @gen varchar )

RETURNS int
AS
BEGIN
         DECLARE @x int

         SELECT @x = count(sexo)
         FROM [hospi].[Pacientes]
         WHERE sexo = @gen

        RETURN @x
END
GO
/****** Object:  UserDefinedFunction [hospi].[ContarPacientes]    Script Date: 15/05/2020 18:31:46 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [hospi].[ContarPacientes] ()
RETURNS int
AS
BEGIN
 
   DECLARE @NI int  --Numero Ingresos

         SELECT @NI = count([NHistorial])
         FROM [hospi].[Pacientes]
       

        RETURN @NI
END
GO
/****** Object:  Table [hospi].[INGRESOS]    Script Date: 15/05/2020 18:31:46 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [hospi].[INGRESOS](
	[NIngreso] [int] IDENTITY(1,1) NOT NULL,
	[NHistorial] [varchar](9) NULL,
	[FechaIngreso] [date] NULL,
	[CodigoIdentificacion] [varchar](4) NULL,
	[NPlanta] [int] NULL,
	[NCama] [int] NULL,
	[Alergico] [char](2) NULL,
	[Observaciones] [varchar](6000) NULL,
	[CosteTratamiento] [money] NULL,
	[Diagnostico] [varchar](50) NULL,
 CONSTRAINT [PK_INGRESOS] PRIMARY KEY CLUSTERED 
(
	[NIngreso] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [hospi].[MEDICOS]    Script Date: 15/05/2020 18:31:46 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [hospi].[MEDICOS](
	[CodIdentificacion] [varchar](4) NOT NULL,
	[NombreMedico] [varchar](15) NULL,
	[ApellidoMedico] [varchar](50) NULL,
	[Especialidad] [varchar](25) NULL,
	[FechaIngreso] [date] NULL,
	[Cargo] [varchar](25) NULL,
	[NColegiado] [int] NULL,
	[Observaciones] [nchar](10) NULL,
 CONSTRAINT [PK_MEDICOS] PRIMARY KEY CLUSTERED 
(
	[CodIdentificacion] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [hospi].[Pacientes]    Script Date: 15/05/2020 18:31:46 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [hospi].[Pacientes](
	[NSegSocial] [varchar](15) NULL,
	[Nombre] [varchar](15) NULL,
	[Apellidos] [varchar](30) NULL,
	[Domicilio] [varchar](30) NULL,
	[Poblacion] [varchar](25) NULL,
	[Provincia] [varchar](15) NULL,
	[CodPostal] [varchar](5) NULL,
	[Telefono] [varchar](12) NULL,
	[NHistorial] [varchar](9) NOT NULL,
	[Sexo] [varchar](1) NULL,
 CONSTRAINT [PK_Pacientes] PRIMARY KEY CLUSTERED 
(
	[NHistorial] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
SET IDENTITY_INSERT [hospi].[INGRESOS] ON 
GO
INSERT [hospi].[INGRESOS] ([NIngreso], [NHistorial], [FechaIngreso], [CodigoIdentificacion], [NPlanta], [NCama], [Alergico], [Observaciones], [CosteTratamiento], [Diagnostico]) VALUES (1, N'10203-F', CAST(N'2009-01-23' AS Date), N'AJH', 5, 121, N'NO', N'Epileptico', NULL, NULL)
GO
INSERT [hospi].[INGRESOS] ([NIngreso], [NHistorial], [FechaIngreso], [CodigoIdentificacion], [NPlanta], [NCama], [Alergico], [Observaciones], [CosteTratamiento], [Diagnostico]) VALUES (2, N'15413-s', CAST(N'2009-03-13' AS Date), N'RLQ', 2, 5, N'SI', N'ALERGICO  ', NULL, NULL)
GO
INSERT [hospi].[INGRESOS] ([NIngreso], [NHistorial], [FechaIngreso], [CodigoIdentificacion], [NPlanta], [NCama], [Alergico], [Observaciones], [CosteTratamiento], [Diagnostico]) VALUES (3, N'11454-L', CAST(N'2009-05-25' AS Date), N'RLQ', 3, 31, N'NO', NULL, NULL, NULL)
GO
INSERT [hospi].[INGRESOS] ([NIngreso], [NHistorial], [FechaIngreso], [CodigoIdentificacion], [NPlanta], [NCama], [Alergico], [Observaciones], [CosteTratamiento], [Diagnostico]) VALUES (4, N'15413-S', CAST(N'2010-01-29' AS Date), N'CEM', 2, 13, N'NO', NULL, NULL, NULL)
GO
INSERT [hospi].[INGRESOS] ([NIngreso], [NHistorial], [FechaIngreso], [CodigoIdentificacion], [NPlanta], [NCama], [Alergico], [Observaciones], [CosteTratamiento], [Diagnostico]) VALUES (5, N'14546-E', CAST(N'2010-02-24' AS Date), N'AJH', 1, 5, N'SI', N'ALERGICO  ', NULL, NULL)
GO
SET IDENTITY_INSERT [hospi].[INGRESOS] OFF
GO
INSERT [hospi].[MEDICOS] ([CodIdentificacion], [NombreMedico], [ApellidoMedico], [Especialidad], [FechaIngreso], [Cargo], [NColegiado], [Observaciones]) VALUES (N'ajh', N'Antonio', N'Jaen Hernandez', N'Pediatria', CAST(N'1982-08-12' AS Date), N'Adjunto', 2113, N'          ')
GO
INSERT [hospi].[MEDICOS] ([CodIdentificacion], [NombreMedico], [ApellidoMedico], [Especialidad], [FechaIngreso], [Cargo], [NColegiado], [Observaciones]) VALUES (N'CEM', N'Carmem', N'Esterill Manrique', N'Psiquiatria', CAST(N'1992-02-13' AS Date), N'Jefe de Seccion', 1231, NULL)
GO
INSERT [hospi].[MEDICOS] ([CodIdentificacion], [NombreMedico], [ApellidoMedico], [Especialidad], [FechaIngreso], [Cargo], [NColegiado], [Observaciones]) VALUES (N'RLQ', N'Rocia', N'Lopez Quijada', N'Medico de familia', CAST(N'1994-09-23' AS Date), N'Titular', 1331, NULL)
GO
INSERT [hospi].[Pacientes] ([NSegSocial], [Nombre], [Apellidos], [Domicilio], [Poblacion], [Provincia], [CodPostal], [Telefono], [NHistorial], [Sexo]) VALUES (N'08/7888888', N'Jose Eduardo', N'Romerales Pinto', N'c/Azorin,34 3o', N'Mostoles', N'Madrid', N'28935', N'91-345-87-45', N'10203-f', N'h')
GO
INSERT [hospi].[Pacientes] ([NSegSocial], [Nombre], [Apellidos], [Domicilio], [Poblacion], [Provincia], [CodPostal], [Telefono], [NHistorial], [Sexo]) VALUES (N'08/7234823', N'Angel', N'Ruiz Picasso', N'c/salmeron,212', N'Madrid', N'Madrid', N'28028', N'91-565-34-33', N'11454-l', N'h')
GO
INSERT [hospi].[Pacientes] ([NSegSocial], [Nombre], [Apellidos], [Domicilio], [Poblacion], [Provincia], [CodPostal], [Telefono], [NHistorial], [Sexo]) VALUES (N'08/7333333', N'Mercedes', N'Romero Carvajal', N'c/Malaga,13', N'Mostoles', N'Madrid', N'28935', N'91-455-67-45', N'14546-e', N'm')
GO
INSERT [hospi].[Pacientes] ([NSegSocial], [Nombre], [Apellidos], [Domicilio], [Poblacion], [Provincia], [CodPostal], [Telefono], [NHistorial], [Sexo]) VALUES (N'08/7555555', N'Martin', N'Fernandez Lopez', N'c/Sastres, 21 ', N'Madrid', N'Madrid', N'28028', N'91-333-33-33', N'15413-s', N'H')
GO
ALTER TABLE [hospi].[INGRESOS]  WITH CHECK ADD  CONSTRAINT [FK_INGRESOS_MEDICOS] FOREIGN KEY([CodigoIdentificacion])
REFERENCES [hospi].[MEDICOS] ([CodIdentificacion])
GO
ALTER TABLE [hospi].[INGRESOS] CHECK CONSTRAINT [FK_INGRESOS_MEDICOS]
GO
ALTER TABLE [hospi].[INGRESOS]  WITH CHECK ADD  CONSTRAINT [FK_INGRESOS_Pacientes] FOREIGN KEY([NHistorial])
REFERENCES [hospi].[Pacientes] ([NHistorial])
GO
ALTER TABLE [hospi].[INGRESOS] CHECK CONSTRAINT [FK_INGRESOS_Pacientes]
GO
ALTER TABLE [hospi].[INGRESOS]  WITH CHECK ADD  CONSTRAINT [alergico si o no] CHECK  (([Alergico]='Si' OR [Alergico]='No'))
GO
ALTER TABLE [hospi].[INGRESOS] CHECK CONSTRAINT [alergico si o no]
GO
ALTER TABLE [hospi].[Pacientes]  WITH CHECK ADD  CONSTRAINT [CK_Pacientes] CHECK  (([sexo]='h' OR [sexo]='m'))
GO
ALTER TABLE [hospi].[Pacientes] CHECK CONSTRAINT [CK_Pacientes]
GO
/****** Object:  StoredProcedure [dbo].[usp_MostrarPacientesIngresados]    Script Date: 15/05/2020 18:31:46 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure [dbo].[usp_MostrarPacientesIngresados]
@p_fecha1 date,
@p_fecha2 date
as

begin

		select p.NSegSocial,p.Nombre,p.Apellidos,p.Domicilio,p.Poblacion,p.Provincia,p.CodPostal,p.Telefono,p.NHistorial,p.Sexo
		from [hospi].[Pacientes] as p
		inner join [hospi].[INGRESOS] as i on p.NHistorial= i.NHistorial
		where i.FechaIngreso> @p_fecha1 and  i.FechaIngreso > @p_fecha2 
end


GO
/****** Object:  StoredProcedure [hospi].[Altamedico]    Script Date: 15/05/2020 18:31:46 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

create procedure [hospi].[Altamedico]

@p_CodIdentificacion varchar(4),
@p_NombreMedico varchar(15),
@p_ApellidoMedico varchar(50),
@p_Especialidad varchar(25),
@p_FechaIngreso date,
@p_Cargo varchar(25),
@p_NColegiado int,
@p_Observaciones varchar(6000),
@p_error int
as
	begin
	--Comprobacion de numero de colegiado
			if @p_NColegiado >1000
			begin
				set @p_error = 1 --si el numero de colegiado es muy viejo no se admite y sale en la pantalla error 1--
			end
	end 
GO
